扩展Spring MVC的配置
        使用WebMvcConfigurer这个bean
        WebMvcConfigurerAdapter(过时)
使用@EnableWebMvc注解时说明不需要Spring Boot提供的Spring MVC配置一切配置由自己完成

Spring Boot 注测Servlet三大组件
               只要注入  ServletRegistrationBean
                        FilterRegistrationBean
                        ServletListenerRegistrationBean
                        ...即可
@ConfigurationProperties与@Value的区别
        @ConfigurationProperties可以将前缀一样的配置封装到一个对象中去 不支持Sprint El 表达式
        支持松散绑定 如last_name 可以绑定到lastName上 可以进行JSR330校验 可以封装复杂类型
        @Value只能一个一个将值注入 支持Spring EL表达式
        如果需要将一系列配置注入到一个Bean中使用@ConfigurationProperties
视图
    使用 thymeleaf
        添加
          <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
          </dependency>
        默认prefix=/templates
        suffix=.html
    使用jsp
        默认不支持JSP
            首先要添加<dependency>
                     <groupId>javax.servlet</groupId>
                     <artifactId>jstl</artifactId>
                 </dependency>
                要有一个SpringBootServletInitializer类的配置类
        添加配置
        默认位置在src/main/webapp
            spring.mvc.view.prefix:/WEB-INF/jsp/
            spring.mvc.view.suffix:.jsp
配置服务器端口等信息
    在配置文件中用server.**来配置


JPA
        添加依赖
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-jpa</artifactId>
               </dependency>
        将实体类上添加@Entity注解
        创建对应的接口继承JpaRepository<T, ID>接口即可

Mybatis
              添加依赖
                        <dependency>
                                   <groupId>org.mybatis.spring.boot</groupId>
                                   <artifactId>mybatis-spring-boot-starter</artifactId>
                                   <version>1.3.2</version>
                        </dependency>
              配置
              mapper.xml包
              mybatis.mapper-locations=mapper/*.xml
              别名包
              mybatis.type-aliases-package=com.guns.demo.model
              配置文件的位子（也可以全在spring中配置）
              mybatis.config-location=classpath:mybatis-config.xml

activemq
        添加依赖
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-activemq</artifactId>
                </dependency>
                <dependency>（可选当spring.activemq.pool.enabled=true时需要添加此依赖）
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>activemq-pool</artifactId>
                    <!-- <version>5.7.0</version> -->
                </dependency>
         配置
         spring.activemq.broker-url=tcp://localhost:61616
         spring.activemq.user=admin
         spring.activemq.password=admin
         spring.activemq.pool.enabled=false

       消息提供者
       public void send(Destination destination, String  message) throws JMSException {
               MessageCreator messageCreator=new MessageCreator() {
                   @Override
                   public Message createMessage(Session session) throws JMSException {
                       return session.createTextMessage(message);
                   }
               };
               jmsTemplate.send(destination, messageCreator);
           }
        消费者
        监听destination要和提供的destination一致
        @JmsListener(destination = "mq")
            public void receiveQueue(String text){
        //        if("消息2".equals(text)){
        //            throw new RuntimeException();
        //        }
                System.out.println(text);

            }





